
<div class="row">
	<div class="col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3">
		<form id="form" class="panel panel-default" action="#">
			<div class="panel-heading">Informações Básicas do Jogo</div>
			<div class="panel-body no-bottom">
				<input type="hidden" id="id" name="id" value="<%=(item ? item.id : 0) %>" />
				<div class="form-group">
					<label for="nome">Nome</label>
					<input id="nome" name="nome" maxlength="100" class="form-control" type="text" spellcheck="false" value="<%=(item ? item.nome : '') %>" />
				</div>
				<div class="form-group">
					<label for="token">Token <i class="fa fa-info-circle" id="tooltipToken" data-toggle="tooltip" data-placement="top" title="O token age como uma senha para que a pontuação possa ser marcada pelo jogo. Caso o token 'vaze', basta alterá-lo aqui."></i></label>
					<input id="token" name="token" maxlength="50" class="form-control" type="text" spellcheck="false" value="<%=(item ? item.token : '') %>" />
				</div>
				<div class="form-group">
					<label for="url_externa">URL Externa</label>
					<input id="url_externa" name="url_externa" maxlength="200" class="form-control" type="url" spellcheck="false" value="<%=(item ? item.url_externa : '') %>" />
				</div>
				<div class="form-group">
					<label for="url_repositorio">URL do Repositório</label>
					<input id="url_repositorio" name="url_repositorio" maxlength="200" class="form-control" type="url" spellcheck="false" value="<%=(item ? item.url_repositorio : '') %>" />
				</div>
				<div class="form-group">
					<label for="tipo_pontuacao">Tipo de Pontuação</label>
					<select id="tipo_pontuacao" name="tipo_pontuacao" size="1" class="form-control">
						<option value="" <%=(!item ? 'selected="selected"' : '') %>>SELECIONE...</option>	
						<option value="0" <%=((item && item.tipo_pontuacao === 0) ? 'selected="selected"' : '') %>>SEM PONTUAÇÃO</option>	
						<option value="1" <%=((item && item.tipo_pontuacao === 1) ? 'selected="selected"' : '') %>>COM PONTUAÇÃO</option>	
					</select>
				</div>
				<div class="form-group">
					<label for="imagem">Imagem</label>
					<input id="imagem" name="imagem" class="form-control" type="file" accept="image/*" />
				</div>
			</div>
			<div class="panel-footer">
				<input value="<%=(item ? 'Salvar Alterações' : 'Criar Jogo') %>" class="btn btn-primary btn-lg btn-block" type="submit" />
			</div>
		</form>
	</div>
</div>

<%- contentFor("scripts") %>
<script type="text/javascript">
	//<![CDATA[
	"use strict";

	$("#tooltipToken").tooltip();

	function gerarPNGVazio() {
		return new Uint8Array([
			0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52,
			0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00, 0x1F, 0x15, 0xC4,
			0x89, 0x00, 0x00, 0x00, 0x0B, 0x49, 0x44, 0x41, 0x54, 0x08, 0xD7, 0x63, 0x60, 0x00, 0x02, 0x00,
			0x00, 0x05, 0x00, 0x01, 0xE2, 0x26, 0x05, 0x9B, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44,
			0xAE, 0x42, 0x60, 0x82
		]);
	}

	var preparandoImagem = false;

	$("#form").validate({
		rules: {
			nome: {
				required: true,
				minlength: 2,
				maxlength: 100
			},
			token: {
				maxlength: 50
			},
			url_externa: {
				maxlength: 200
			},
			url_repositorio: {
				maxlength: 200
			},
			tipo_pontuacao: {
				required: true,
				number: true
			},
			imagem: {
				suporteArquivoAvancado: true,
				tamanhoArquivoMinimoBytes: 128,
				tamanhoArquivoMaximoKiB: 512,
				extensaoArquivo: [".png", ".jpg", ".jpeg"]
			}
		},

		submitHandler: function (form) {
			if (JsonWebApi.active || preparandoImagem)
				return;

			var formData = new FormData(form), imagem = document.getElementById("imagem");

			function erroImagem() {
				preparandoImagem = false;
				Notification.error("Ocorreu um erro durante o processamento da imagem " + emoji.sad, true);
			}

			function prepararImagem(arquivo) {
				preparandoImagem = true;

				var reader = new FileReader();
				reader.onload = function () {
					var image = new Image();
					image.onload = function () {
						var w = image.width, h = image.height;

						preparandoImagem = false;

						if (w < 128 || h < 128) {
							Notification.error("A imagem é muito pequena (largura e altura devem ser maiores do que 100 pixels) " + emoji.sad, true);
							return;
						}

						if (w > 2000 || h > 2000) {
							Notification.error("A imagem é muito grande (largura e altura devem ser menores do que 2000 pixels) " + emoji.sad, true);
							return;
						}

						terminar(true);
					};
					image.onerror = erroImagem;
					image.src = reader.result;
				};
				reader.onerror = erroImagem;
				reader.readAsDataURL(arquivo);
			}

			function terminar(temImagem) {
				//<% if (item) { %>

				JsonWebApi.postFormData("<%- root %>/api/jogo/alterar", formData, function (response) {
					if (response.success) {
						imagem.value = "";
						Notification.success("Jogo alterado com sucesso! " + emoji.happy);
					} else {
						Notification.error(response.value, true);
					}
				});

				//<% } else { %>

				if (!temImagem)
					formData.append("imagem", new Blob([gerarPNGVazio()], { type: "image/png" }));

				JsonWebApi.postFormData("<%- root %>/api/jogo/criar", formData, function (response) {
					if (response.success) {
						resetForm("#form");
						Notification.success("Jogo criado com sucesso! " + emoji.happy);
					} else {
						Notification.error(response.value, true);
					}
				});

				//<% } %>
			}

			Notification.wait();

			if (imagem.files && imagem.files[0])
				prepararImagem(imagem.files[0]);
			else
				terminar(false);
		}
	});
	//]]>
</script>
